<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rtmap.apistore.interfaces.taskland.dao.TaskCommentDao">
	<resultMap id="BaseResultMap"
		type="com.rtmap.apistore.interfaces.taskland.entity.TaskComment">

		<id column="COMMENT_ID" property="commentId" jdbcType="VARCHAR" />
		<result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
		<result column="FLOW_ID" property="flowId" jdbcType="VARCHAR" />
		<result column="REPLY_TYPE" property="replyType" jdbcType="SMALLINT" />
		<result column="COMMENTS" property="comments" jdbcType="VARCHAR" />
		<result column="REPLIER" property="replier" jdbcType="VARCHAR" />
		<result column="REPLY_TIME" property="replyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		COMMENT_ID, TASK_ID, FLOW_ID, REPLY_TYPE, COMMENTS,
		REPLIER, REPLY_TIME
	</sql>
	<select id="selectByCommentId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
			<include refid="Base_Column_List" />
		  FROM ${SCHEMA_TASK}.TASK_COMMENT
		 WHERE COMMENT_ID = #{commentId,jdbcType=VARCHAR}
	</select>
	<select id="selectIdNamesByIds" resultType="java.util.HashMap">
		SELECT
			COMMENT_ID AS ID,CONCAT(REPLIER,":",COMMENTS)AS NAME
		  FROM ${SCHEMA_TASK}.TASK_COMMENT
		 WHERE COMMENT_ID IN
		 <foreach collection="commentIds" item="commentId" open="("
			separator="," close=")">
			#{commentId}
		</foreach>
	</select>
	<select id="selectCommentsByTaskId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		SELECT
			<include refid="Base_Column_List" />
		  FROM ${SCHEMA_TASK}.TASK_COMMENT
		 WHERE TASK_ID = #{taskId,jdbcType=VARCHAR} 
		 ORDER BY REPLY_TIME DESC
	</select>
	<delete id="deleteByCommentIds">
		DELETE FROM ${SCHEMA_TASK}.TASK_COMMENT
		 WHERE COMMENT_ID IN
		 <foreach collection="commentIds" item="commentId" open="("
			separator="," close=")">
			#{commentId}
		</foreach>
	</delete>
	<delete id="deleteByTaskId">
		DELETE FROM ${SCHEMA_TASK}.TASK_COMMENT
		 WHERE TASK_ID = #{taskId}
	</delete>
	<insert id="insert"
		parameterType="com.rtmap.apistore.interfaces.taskland.entity.TaskComment">
		INSERT INTO ${SCHEMA_TASK}.TASK_COMMENT (
			COMMENT_ID,
			TASK_ID, 
			FLOW_ID,
			REPLY_TYPE, 
			COMMENTS, 
			REPLIER,
			REPLY_TIME
		)VALUES(
			#{commentId,jdbcType=VARCHAR}, 
			#{taskId,jdbcType=VARCHAR},
			#{flowId,jdbcType=VARCHAR},
			#{replyType,jdbcType=SMALLINT},
			#{comments,jdbcType=VARCHAR}, 
			#{replier,jdbcType=VARCHAR},
			now()
		)
	</insert>
	<update id="update"
		parameterType="com.rtmap.apistore.interfaces.taskland.entity.TaskComment">
		UPDATE ${SCHEMA_TASK}.TASK_COMMENT
		<set>
			<if test="taskId != null">
				TASK_ID = #{taskId,jdbcType=VARCHAR},
			</if>
			<if test="flowId != null">
				FLOW_ID = #{flowId,jdbcType=VARCHAR},
			</if>
			<if test="replyType != null">
				REPLY_TYPE = #{replyType,jdbcType=SMALLINT},
			</if>
			<if test="comments != null">
				COMMENTS = #{comments,jdbcType=VARCHAR},
			</if>
			<if test="replier != null">
				REPLIER = #{replier,jdbcType=VARCHAR},
			</if>
			REPLY_TIME = NOW(),
		</set>
		WHERE COMMENT_ID = #{commentId,jdbcType=VARCHAR}
	</update>
</mapper>