<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rtmap.apistore.interfaces.taskland.dao.TaskLogDao">
	<resultMap id="BaseResultMap"
		type="com.rtmap.apistore.interfaces.taskland.entity.TaskLog">

		<id column="LOG_ID" property="logId" jdbcType="VARCHAR" />
		<result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
		<result column="OPERATE_TYPE" property="operateType" jdbcType="SMALLINT" />
		<result column="OPERATE_CONT" property="operateCont" jdbcType="VARCHAR" />
		<result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
		<result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">

		LOG_ID, TASK_ID, OPERATE_TYPE, OPERATE_CONT, OPERATOR,
		OPERATE_TIME
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">

		select
		<include refid="Base_Column_List" />
		from ${SCHEMA_TASK}.task_log
		where LOG_ID = #{logId,jdbcType=VARCHAR}
	</select>
	<select id="selectByTaskId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ${SCHEMA_TASK}.task_log
		where TASK_ID = #{taskId,jdbcType=VARCHAR}
		<if test="stateItems!= null">
			and OPERATE_TYPE in 
			<foreach item="item" index="index" collection="stateItems" open="(" separator="," close=")">  
			 #{item}  
			</foreach>
		</if>
		order by OPERATE_TIME desc
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">

		delete from
		${SCHEMA_TASK}.task_log
		where LOG_ID = #{logId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert"
		parameterType="com.rtmap.apistore.interfaces.taskland.entity.TaskLog">

		insert into ${SCHEMA_TASK}.task_log (LOG_ID,
		TASK_ID,
		OPERATE_TYPE,
		OPERATE_CONT, OPERATOR, OPERATE_TIME
		)
		values
		(#{logId,jdbcType=VARCHAR}, #{taskId,jdbcType=VARCHAR},
		#{operateType,jdbcType=SMALLINT},
		#{operateCont,jdbcType=VARCHAR},
		#{operator,jdbcType=VARCHAR}, now()
		)
	</insert>
</mapper>